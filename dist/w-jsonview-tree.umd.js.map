{"version":3,"file":"w-jsonview-tree.umd.js","sources":["../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/style-inject/dist/style-inject.es.js","../src/WJsonviewTree.mjs"],"sourcesContent":["function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import './WJsonviewTree.css'\r\n\r\n\r\n/**\r\n * 前端通過元素展示Json樹狀資料，因 [Fork: {@link https://github.com/pgrabovets/json-view json-view}] 沒有加入預先展開數據功能，自己下載來修改\r\n *\r\n * @export\r\n * @param {Object} jsonObj 輸入Json物件\r\n * @param {Element} rootElem 輸入初始化元素\r\n * @param {Object} [option={}] 輸入設定物件，預設為空物件\r\n * @param {Boolean} [option.expanded=false] 輸入是否預先展開，預設為false\r\n */\r\nfunction WJsonviewTree(jsonObj, rootElem, option = {}) {\r\n\r\n\r\n    //default expanded\r\n    let _expanded = false\r\n\r\n\r\n    //Init\r\n    Init(jsonObj, rootElem, option)\r\n\r\n\r\n    /**\r\n     * Initialize\r\n     */\r\n    function Init(jsonObj, rootElem, option) {\r\n\r\n        //get expanded\r\n        if (option) {\r\n            _expanded = option['expanded'] === true\r\n        }\r\n\r\n        //clear\r\n        rootElem.innerHTML = ''\r\n\r\n        //add class\r\n        rootElem.classList.add('CompCssDJsonViewTree')\r\n\r\n        //render\r\n        let tree = createTree(jsonObj)\r\n        render(tree, rootElem)\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Create html element\r\n     * @param {String} type html element\r\n     * @param {Object} config\r\n     */\r\n    function createElement(type, config) {\r\n        let htmlElement = document.createElement(type)\r\n\r\n        if (config === undefined) {\r\n            return htmlElement\r\n        }\r\n\r\n        if (config.className) {\r\n            htmlElement.className = config.className\r\n        }\r\n\r\n        if (config.content) {\r\n            htmlElement.textContent = config.content\r\n        }\r\n\r\n        if (config.children) {\r\n            config.children.forEach((el) => {\r\n                if (el !== null) {\r\n                    htmlElement.appendChild(el)\r\n                }\r\n            })\r\n        }\r\n\r\n        return htmlElement\r\n    }\r\n\r\n\r\n    /**\r\n     * Create expanded element\r\n     * @param {Object} node\r\n     * @return {HTMLElement}\r\n     */\r\n    function createExpandedElement(node) {\r\n        let iElem = createElement('i')\r\n\r\n        if (node.expanded) {\r\n            iElem.className = 'wicon w-caret-down'\r\n        }\r\n        else {\r\n            iElem.className = 'wicon w-caret-right'\r\n        }\r\n\r\n        let caretElem = createElement('div', {\r\n            className: 'wjv-caret-icon',\r\n            children: [iElem],\r\n        })\r\n\r\n        let handleClick = node.toggle.bind(node)\r\n        caretElem.addEventListener('click', handleClick)\r\n\r\n        let indexElem = createElement('div', {\r\n            className: 'wjv-json-index',\r\n            content: node.key,\r\n        })\r\n\r\n        let typeElem = createElement('div', {\r\n            className: 'wjv-json-type',\r\n            content: node.type,\r\n        })\r\n\r\n        let keyElem = createElement('div', {\r\n            className: 'wjv-json-key',\r\n            content: node.key,\r\n        })\r\n\r\n        let sizeElem = createElement('div', {\r\n            className: 'wjv-json-size'\r\n        })\r\n\r\n        if (node.type === 'array') {\r\n            sizeElem.innerText = '[' + node.children.length + ']'\r\n        }\r\n        else if (node.type === 'object') {\r\n            sizeElem.innerText = '{' + node.children.length + '}'\r\n        }\r\n\r\n        let lineChildren\r\n        if (node.key === null) {\r\n            lineChildren = [caretElem, typeElem, sizeElem]\r\n        }\r\n        else if (node.parent.type === 'array') {\r\n            lineChildren = [caretElem, indexElem, sizeElem]\r\n        }\r\n        else {\r\n            lineChildren = [caretElem, keyElem, sizeElem]\r\n        }\r\n\r\n        let lineElem = createElement('div', {\r\n            className: 'wjv-line',\r\n            children: lineChildren\r\n        })\r\n\r\n        if (node.depth > 0) {\r\n            //lineElem.style = 'margin-left: ' + node.depth * 24 + 'px;' //IE11 strict模式下無法指派, style為唯讀屬性\r\n            lineElem.setAttribute('style', 'margin-left: ' + node.depth * 24 + 'px;')\r\n        }\r\n\r\n        return lineElem\r\n    }\r\n\r\n\r\n    /**\r\n     * Create not expanded element\r\n     * @param {Object} node\r\n     * @return {HTMLElement}\r\n     */\r\n    function createNotExpandedElement(node) {\r\n        let caretElem = createElement('div', {\r\n            className: 'wjv-empty-icon',\r\n        })\r\n        let keyElem = createElement('div', {\r\n            className: 'wjv-json-key',\r\n            content: node.key\r\n        })\r\n        let separatorElement = createElement('div', {\r\n            className: 'wjv-json-separator',\r\n            content: ':'\r\n        })\r\n        let valueType = ' wjv-json-' + typeof node.value\r\n        let valueContent = String(node.value)\r\n        let valueElement = createElement('div', {\r\n            className: 'wjv-json-value' + valueType,\r\n            content: valueContent\r\n        })\r\n        let lineElem = createElement('div', {\r\n            className: 'wjv-line',\r\n            children: [caretElem, keyElem, separatorElement, valueElement]\r\n        })\r\n        if (node.depth > 0) {\r\n            //lineElem.style = 'margin-left: ' + node.depth * 24 + 'px;' //IE11 strict模式下無法指派, style為唯讀屬性\r\n            lineElem.setAttribute('style', 'margin-left: ' + node.depth * 24 + 'px;')\r\n        }\r\n        return lineElem\r\n    }\r\n\r\n\r\n    /**\r\n     * Create tree node\r\n     * @return {Object}\r\n     */\r\n    function createNode() {\r\n        return {\r\n            key: null,\r\n            parent: null,\r\n            value: null,\r\n            expanded: _expanded,\r\n            type: null,\r\n            children: null,\r\n            elem: null,\r\n            depth: 0,\r\n\r\n            setCaretIconRight() {\r\n                let icon = this.elem.querySelector('.wicon')\r\n                icon.classList.replace('w-caret-down', 'w-caret-right')\r\n            },\r\n\r\n            setCaretIconDown() {\r\n                let icon = this.elem.querySelector('.wicon')\r\n                icon.classList.replace('w-caret-right', 'w-caret-down')\r\n            },\r\n\r\n            hideChildren() {\r\n                if (this.children !== null) {\r\n                    this.children.forEach((item) => {\r\n                        item.elem.classList.add('wjv-json-hide')\r\n                        if (item.expanded) {\r\n                            item.hideChildren()\r\n                        }\r\n                    })\r\n                }\r\n            },\r\n\r\n            showChildren() {\r\n                if (this.children !== null) {\r\n                    this.children.forEach((item) => {\r\n                        item.elem.classList.remove('wjv-json-hide')\r\n                        if (item.expanded) {\r\n                            item.showChildren()\r\n                        }\r\n                    })\r\n                }\r\n            },\r\n\r\n            toggle: function() {\r\n                if (this.expanded) {\r\n                    this.expanded = false\r\n                    this.hideChildren()\r\n                    this.setCaretIconRight()\r\n                }\r\n                else {\r\n                    this.expanded = true\r\n                    this.showChildren()\r\n                    this.setCaretIconDown()\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Return variable type\r\n     * @param {*} val\r\n     */\r\n    function getType(val) {\r\n        let type = typeof val\r\n        if (Array.isArray(val)) {\r\n            type = 'array'\r\n        }\r\n        else if (val === null) {\r\n            type = 'null'\r\n        }\r\n        return type\r\n    }\r\n\r\n\r\n    /**\r\n     * Recursively traverse json object\r\n     * @param {Object} obj parsed json object\r\n     * @param {Object} parent of object tree\r\n     */\r\n    function traverseObject(obj, parent) {\r\n        for (let key in obj) {\r\n            let child = createNode()\r\n            child.parent = parent\r\n            child.key = key\r\n            child.type = getType(obj[key])\r\n            child.depth = parent.depth + 1\r\n            child.expanded = _expanded\r\n\r\n            if (typeof obj[key] === 'object') {\r\n                child.children = []\r\n                parent.children.push(child)\r\n                traverseObject(obj[key], child)\r\n                child.elem = createExpandedElement(child)\r\n            }\r\n            else {\r\n                child.value = obj[key]\r\n                child.elem = createNotExpandedElement(child)\r\n                parent.children.push(child)\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Create root of a tree\r\n     * @param {Object} obj Json object\r\n     * @return {Object}\r\n     */\r\n    function createTree(obj) {\r\n        let tree = createNode()\r\n        tree.type = getType(obj)\r\n        tree.children = []\r\n        tree.expanded = _expanded\r\n\r\n        traverseObject(obj, tree)\r\n        tree.elem = createExpandedElement(tree)\r\n\r\n        return tree\r\n    }\r\n\r\n\r\n    /**\r\n     * Recursively traverse Tree object\r\n     * @param {Object} node\r\n     * @param {Callback} callback\r\n     */\r\n    function traverseTree(node, callback) {\r\n        callback(node)\r\n        if (node.children !== null) {\r\n            node.children.forEach((item) => {\r\n                traverseTree(item, callback)\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Render Tree object\r\n     * @param {Object} tree\r\n     * @param {String} rootElem\r\n     */\r\n    function render(tree, rootElem) {\r\n        traverseTree(tree, (node) => {\r\n            if (!node.expanded) {\r\n                node.hideChildren()\r\n            }\r\n            rootElem.appendChild(node.elem)\r\n        })\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default WJsonviewTree\r\n"],"names":["_typeof2","obj","Symbol","_typeof3","iterator","constructor","prototype","_typeof","module","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","jsonObj","rootElem","option","_expanded","config","htmlElement","undefined","className","content","textContent","children","forEach","el","createExpandedElement","node","iElem","expanded","caretElem","handleClick","toggle","bind","addEventListener","indexElem","key","typeElem","keyElem","sizeElem","innerText","length","lineElem","parent","depth","setAttribute","createNotExpandedElement","separatorElement","valueElement","value","String","createNode","elem","setCaretIconRight","this","querySelector","classList","replace","setCaretIconDown","hideChildren","item","add","showChildren","remove","getType","val","Array","isArray","innerHTML","tree","traverseTree","callback","render","traverseObject","child","push","createTree","Init"],"mappings":"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"}